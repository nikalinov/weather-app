{"mappings":"AAAA,0BAA0B;AAC1B,SAAS,WAAW,IAAI;IACtB,IAAI,QAAQ,KAAK,QAAQ;IACzB,IAAI,QAAQ,IACV,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;IAGrB,IAAI,UAAU,KAAK,UAAU;IAC7B,IAAI,UAAU,IACZ,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC;IAEzB,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC;AAC9B;AAEA,SAAS,UAAU,IAAI;IACrB,MAAM,WAAW,KAAK,MAAM;IAC5B,MAAM,OAAO;QACX;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM,MAAM,IAAI,CAAC,SAAS;IAC1B,OAAO;AACT;AAEA,+CAA+C;AAC/C,MAAM,cAAc,SAAS,aAAa,CAAC;AAC3C,IAAI,iBAAiB,IAAI;AACzB,YAAY,SAAS,GAAG,WAAW;AAEnC,MAAM,aAAa,SAAS,aAAa,CAAC;AAC1C,IAAI,gBAAgB,IAAI;AACxB,WAAW,SAAS,GAAG,UAAU;AAEjC,0CAA0C;AAC1C,SAAS,mBAAmB,QAAQ;IAClC,SAAS,aAAa,CAAC,kBAAkB,SAAS,GAAG,SAAS,IAAI,CAAC,IAAI;IACvE,MAAM,cAAc,KAAK,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI;IACtD,SAAS,aAAa,CAAC,wBAAwB,SAAS,GAAG,CAAC,EAAE,YAAY,IAAC,CAAC;IAC5E,MAAM,WAAW,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ;IAC5C,SAAS,aAAa,CAAC,aAAa,SAAS,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;IAC9D,MAAM,YAAY,KAAK,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK;IACrD,SAAS,aAAa,CAAC,SAAS,SAAS,GAAG,CAAC,EAAE,UAAU,IAAI,CAAC;IAC9D,SAAS,aAAa,CAAC,iBAAiB,SAAS,GAC/C,SAAS,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI;AACjC;AAEA,SAAS,WAAW,IAAI;IACtB,MAAM,SAAS;IACf,MAAM,SAAS,CAAC,kDAAkD,EAAE,KAAK,aAAa,CAAC;IACvF,MAAM,GAAG,CAAC,CAAC,EAAE,OAAO,OAAO,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC;IAC5C,WAAW;AACb;AAEA,eAAe,WAAW,IAAI;IAC5B,MAAM,UAAU,MAAM,MACpB,CAAC,oGAAoG,EAAE,KAAK,mBAAmB,CAAC;IAElI,MAAM,SAAS,MAAM,QAAQ,IAAI;IACjC,MAAM,UAAU,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG;IAC1C,QAAQ,GAAG,CAAC;IACZ,SAAS,oBAAoB,CAC3B,OACD,CAAC,EAAE,CAAC,SAAS,IAAI,CAAC,mHAAmH,EAAE,QAAQ,+CAA+C,CAAC;AAClM;AAEA,SAAS,aAAa,KAAK;IACzB,MAAM,cAAc;IACpB,IAAI,OAAO,SAAS,aAAa,CAAC,iBAAiB,KAAK;IACxD,WAAW;AACb;AAEA,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,UAAU,gBAAgB,CAAC,UAAU","sources":["index.js"],"sourcesContent":["// formatting time and day\nfunction formatTime(date) {\n  let hours = date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  let minutes = date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  return `${hours}:${minutes}`;\n}\n\nfunction formatDay(date) {\n  const dayArray = date.getDay();\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const day = days[dayArray];\n  return day;\n}\n\n// getting current time & day and displaying it\nconst currentTime = document.querySelector(\"#current-time\");\nlet newCurrentTime = new Date();\ncurrentTime.innerHTML = formatTime(newCurrentTime);\n\nconst currentDay = document.querySelector(\"#current-day\");\nlet newCurrentDay = new Date();\ncurrentDay.innerHTML = formatDay(newCurrentDay);\n\n// implementing search bar and api request\nfunction displayWeatherInfo(response) {\n  document.querySelector(\"#searched-city\").innerHTML = response.data.name;\n  const temperature = Math.round(response.data.main.temp);\n  document.querySelector(\"#current-temperature\").innerHTML = `${temperature}Â°`;\n  const humidity = response.data.main.humidity;\n  document.querySelector(\"#humidity\").innerHTML = `${humidity}%`;\n  const windSpeed = Math.round(response.data.wind.speed);\n  document.querySelector(\"#wind\").innerHTML = `${windSpeed}km/h`;\n  document.querySelector(\"#weather-type\").innerHTML =\n    response.data.weather[0].main;\n}\n\nfunction searchCity(city) {\n  const apiKey = \"2b5fc755ac2ec59250868b5527df31c4\";\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric`;\n  axios.get(`${apiUrl}&appid=${apiKey}`).then(displayWeatherInfo);\n  setPicture(city);\n}\n\nasync function setPicture(city) {\n  const promise = await fetch(\n    `https://api.unsplash.com/search/photos/?client_id=Z2pRlKiwrqZYJQbwMytFxXzOWQF0ggPOCQQsuuecHic&query=${city}&page=1&w=500&h=500`\n  );\n  const result = await promise.json();\n  const picture = result.results[0].urls.raw;\n  console.log(picture);\n  document.getElementsByTagName(\n    \"head\"\n  )[0].innerHTML += `<style>body::before {content: '';position: absolute;top: 0;left: 0;width: 100%;height: 100%;background-image: url('${picture}');opacity: 0.3;background-size:cover;}</style>`;\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let city = document.querySelector(\"#search-input\").value;\n  searchCity(city);\n}\n\nconst searchBar = document.querySelector(\"#search-form\");\nsearchBar.addEventListener(\"submit\", handleSubmit);\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}